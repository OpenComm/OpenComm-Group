Risa Naka-- rn96 -- OpenComm Desktop Parallel RTP Sessions
Sprint 5: Old Raj -- Mar.2.2011

############################
############################


DemoRTP.java (0001)
	a) Purpose of class/interface (0001a)
	b) Versions of class/interface (0001b)
	c) Unimplemented Changes (0001c)
	
AudioReceiver.java (0002)
	a) Purpose of class/interface (0002a)
	b) Versions of class/interface (0002b)
	c) Unimplemented Changes (0002c)

AudioSender.java (0003)
	a) Purpose of class/interface (0003a)
	b) Versions of class/interface (0003b)
	c) Unimplemented Changes (0003c)

AudioConnect.java (0004)
	a) Purpose of class/interface (0004a)
	b) Versions of class/interface (0004b)
	c) Unimplemented Changes (0004c)

UserRTP.java (0005)
	a) Purpose of class/interface (0005a)
	b) Versions of class/interface (0005b)
	c) Unimplemented Changes (0005c)

GuiRTP.java (0006)
	a) Purpose of class/interface (0006a)
	b) Versions of class/interface (0006b)
	c) Unimplemented Changes (0006c)

Debugging/Integration method (0007)
	a) Notes from Network (0007a)
	b) Notes from Sound Spatialization (0007b)
	
	
############################
############################


DemoRTP.java (0001)

	a) Purpose of class/interface (0001a)
		Main method: runs the tech demo for parallel RTP session
	
	
	b) Versions of class/interface (0001b)
		Version 1: runs the tech demo through hard-coded IP addresses
		Version 1: calls the GUI that runs the tech demo, IP address
		must be the same order
	
	
	c) Unimplemented changes (0001c)


############################
############################


AudioReceiver.java (0002)

	a) Purpose of class/interface (0002a)
		Class: sends a request to a specific server. Once the request is 
			received by the server, the two are connected through the specified port, 
			and this instance receives the audio, spatializes the sound, 
			and plays it out to the speaker
	
	
	b) Versions of class/interface (0002b)
		Version 1: sends request and receives audio through hard-coded
			IP address and port
		
		Version 2: sends request and receives audio through IP address
			and port that is called by its constructor method
	
		Version 3: sends max 10 requests to the server
	
	c) Unimplemented changes (0002c)
		Spatialize sound in accordance to the source's position on the
		receiver's screen
		Output failure to connect to the server
		Provide option of attempt at reconnecting


############################
############################


AudioSender.java (0003)

	a) Purpose of class/interface (0003a)
		Class: creates a server, accepts a request from the client to
		connect through a specific port, and when the connection is
		established, sends audio to the client.
	
	
	b) Versions of class/interface (0003b)
		Version 1: creates server and sends audio through hard-coded
			IP address and port
		
		Version 2: creates server and sends audio through IP address
			and port that is called by its constructor method
	
	
	c) Unimplemented changes (0003c)
		Output failure to establish connection
		Provide option of attempt at reconnecting


############################
############################


AudioConnect.java (0004)

	a) Purpose of class/interface (0004a)
		Class: creates a connection information storage in which
			the sender's and receiver's IP address and the port number
			used is stored
	
	
	b) Versions of class/interface (0004b)
		Version 1: stores sender's and receiver's IP address and the
		port number used is stored
		
		Version 2: takes a string of IP addresses and generates the port
		numbers used by each pair for receiving and sending audio
	
	
	c) Unimplemented changes (0004c)
		Add and remove users during a conference
		
		
############################
############################


GuiRTP.java (0006)

	a) Purpose of class/interface (0006a)
		Class: creates a gui for the RTP demo
	
	
	b) Versions of class/interface (0006b)
		Version 1: creates a GUI that asks for the number of users
			in the conference, and then asks for the IP address of
			all users.
		Version 2: creates all necessary AudioReceiver and Senders 
		
	
	c) Unimplemented changes (0006c)

		
############################
############################


Debugging/Integration Method (0007)
		
	a) Notes from Network (0007a)
		No need to sort the IP address list as it will be done by Network
	
	
	b) Notes from Sound Spatialization (0007b)
		Once the communication between RTP/Network and UI is established,
		integrate sound spatialization into class AudioReceiver.java

	
############################
############################